name: Check & deploy API documentation

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write

jobs:
  create-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ toJson(steps.set-matrix.outputs.mapping) }}
    steps:
      - name: Generate matrix
        id: set-matrix
        run: |
          echo "Creating shared matrix"
          spec_mapping='[
            {
              "doc": "atlas-admin-api-v1",
              "file": "openapi/v1-deprecated/v1.json",
              "branch": "main",
            },
            { 
              "doc": "atlas-admin-api-v2", 
              "file": "openapi/v2.json",
              "branch": "latest",
            },
            { 
              "doc": "atlas-admin-api-v2", 
              "file": "openapi/v2/openapi-2025-02-19.json",
              "branch": "2025-02-19",
            }
          ]'
          single_line_json=$(echo $spec_mapping | tr -d '\n')
          echo $spec_mapping
          echo $single_line_json
          echo "mapping=$single_line_json" >> $GITHUB_OUTPUT
    # strategy:
    #   matrix:
    #     spec-mapping: [
    #       {
    #         doc: "atlas-admin-api-v1",
    #         file: "openapi/v1-deprecated/v1.json",
    #         branch: "main",
    #       },
    #       { 
    #         doc: "atlas-admin-api-v2", 
    #         file: "openapi/v2.json",
    #         branch: "latest",
    #       },
    #       { 
    #         doc: "atlas-admin-api-v2", 
    #         file: "openapi/v2/openapi-2025-02-19.json",
    #         branch: "2025-02-19",
    #       },
    #     ]

  deploy-doc:
    needs: create-matrix
    if: ${{ github.event_name == 'push' }}
    name: Deploy API documentation on Bump.sh
    strategy:
      matrix: 
        spec-mapping: ${{ fromJson(needs.create-matrix.outputs.matrix).spec-mapping }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Deploy API documentation
        uses: bump-sh/github-action@v1
        with:
          doc: ${{matrix.spec-mapping.doc}}
          token: ${{secrets.BUMP_TOKEN}}
          file: ${{matrix.spec-mapping.file}}
          branch: ${{matrix.spec-mapping.branch}}
  
  api-preview:
    needs: create-matrix
    if: ${{ github.event_name == 'pull_request' }}
    name: Create API preview on Bump.sh
    strategy:
      matrix: 
        spec-mapping: ${{ fromJson(needs.create-matrix.outputs).matrix }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # - run: echo "${{ toJSON(needs.create-matrix.outputs) }}"
      - name: Create API preview
        uses: bump-sh/github-action@v1
        with:
          doc: ${{matrix.spec-mapping.doc}}
          token: ${{secrets.BUMP_TOKEN}}
          file: ${{matrix.spec-mapping.file}}
          branch: ${{matrix.spec-mapping.branch}}
          command: preview
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
