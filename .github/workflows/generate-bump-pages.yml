name: Check & deploy API documentation

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write

jobs:
  create-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Setup Node
        uses: actions/setup-node@v4
      - name: Generate matrix
        id: set-matrix
        # Ideally, the mapping is generated more dynamically, especially when taking into account
        # Atlas Admin API's v2 resource versions
        run: |
          echo "Creating shared matrix"
          spec_mapping=$(node .github/scripts/generateSpecMapping.js)
          single_line_json=$(echo $spec_mapping | tr -d '\n')
          echo "matrix=$single_line_json" >> $GITHUB_OUTPUT

  deploy-doc:
    needs: create-matrix
    if: ${{ github.event_name == 'push' }}
    name: Deploy API documentation on Bump.sh
    strategy:
      matrix: 
        spec-mapping: ${{ fromJson(needs.create-matrix.outputs.matrix) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Deploy API documentation
        uses: bump-sh/github-action@v1
        with:
          doc: ${{matrix.spec-mapping.doc}}
          token: ${{secrets.BUMP_TOKEN}}
          file: ${{matrix.spec-mapping.file}}
          branch: ${{matrix.spec-mapping.branch}}
  
  api-preview:
    needs: create-matrix
    if: ${{ github.event_name == 'pull_request' }}
    name: Create API preview on Bump.sh
    strategy:
      matrix: 
        spec-mapping: ${{ fromJSON(needs.create-matrix.outputs.matrix) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create API preview
        uses: bump-sh/github-action@v1
        with:
          doc: ${{matrix.spec-mapping.doc}}
          token: ${{secrets.BUMP_TOKEN}}
          file: ${{matrix.spec-mapping.file}}
          branch: ${{matrix.spec-mapping.branch}}
          command: preview
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
